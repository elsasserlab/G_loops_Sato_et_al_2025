name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.ns <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.ns, file="mRNA_ns.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.ns, file="mRNA_ns.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.stable.ID %in% gl.WTup,]
bed.WTspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.WTspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.WTspec, file="mRNA_WTup.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.WTspec, file="mRNA_WTup.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
tss.DKOspec$name <- "mRNA_DKOup"
tss.ns$name <- "mRNA_ns"
tss.WTspec$name <- "mRNA_WTup"
tss.all <- rbind(tss.DKOspec,tss.ns,tss.WTspec)
write.table(tss.all, file="mRNA_categories.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
coord <- read.table("ensemble_genes_mm39.txt",header = T,sep = "\t")
coord<-coord[!is.na(coord$Ensembl.Canonical),]
gl.WTup <- read.csv("table_Downreg_&_WT_specific_genes.csv")[,2]
gl.ns <- read.csv("table_NoSigChanged_genes.csv")[,2]
gl.DKOup <- read.csv("table_Upreg_&_DKO_specific_genes.csv")[,2]
match<-coord[coord$Gene.stable.ID %in% gl.DKOup,]
bed.DKOup <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.DKOup <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.DKOup, file="mRNA_DKOup.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.DKOup, file="mRNA_DKOup.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.stable.ID %in% gl.ns,]
bed.ns <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.ns <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.ns, file="mRNA_ns.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.ns, file="mRNA_ns.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.stable.ID %in% gl.WTup,]
bed.WTspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.WTspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.WTspec, file="mRNA_WTup.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.WTspec, file="mRNA_WTup.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
tss.DKOup$name <- "mRNA_DKOup"
tss.ns$name <- "mRNA_ns"
tss.WTspec$name <- "mRNA_WTup"
tss.all <- rbind(tss.DKOup,tss.ns,tss.WTspec)
write.table(tss.all, file="mRNA_categories.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
coord <- read.table("ensemble_genes_mm39.txt",header = T,sep = "\t")
coord<-coord[!is.na(coord$Ensembl.Canonical),]
gl.DKOspec <- read.table("1.list_genes_names_lncRNA_RNAseq_DKOspec.txt")[,1]
gl.common <- read.table("2.list_genes_names_lncRNA_RNAseq_NonChangedDKOvsWT.txt")[,1]
gl.DKOup <- read.table("3.list_genes_names_lncRNA_RNAseq_UpregulatedDKOvsWT.txt")[,1]
gl.WTspec <- read.table("4.list_genes_names_lncRNA_RNAseq_WTspec.txt")[,1]
match<-coord[coord$Gene.name %in% gl.DKOspec,]
bed.DKOspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.DKOspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.DKOspec, file="lncRNA_DKOspec.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.DKOspec, file="lncRNA_DKOspec.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.name %in% gl.common,]
bed.common <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.common <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.common, file="lncRNA_common.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.common, file="lncRNA_common.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.name %in% c(gl.DKOup,gl.DKOspec),]
bed.DKOup <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.DKOup <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.DKOup, file="lncRNA_DKOup.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.DKOup, file="lncRNA_DKOup.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.name %in% gl.WTspec,]
bed.WTspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.WTspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.WTspec, file="lncRNA_WTspec.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.WTspec, file="lncRNA_WTspec.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
tss.DKOup$name <- "lncRNA_DKOup"
tss.ns$name <- "lncRNA_ns"
tss.DKOup$name <- "lncRNA_DKOup"
tss.common$name <- "lncRNA_ns"
tss.WTspec$name <- "lncRNA_WTup"
tss.all <- rbind(tss.DKOspec,tss.common,tss.WTspec)
write.table(tss.all, file="lncRNA_categories.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
bed_peaks <- rtracklayer::import("../peaks/G4_combined_min3rep.bed")
library(bedscout)
mRNA <- rtracklayer::import("../genelists/mRNA_categories.tss.bed")
lncRNA <- rtracklayer::import("../genelists/lncRNA_categories.tss.bed")
mRNA_peak_ol <- impute_feature(bed_peaks, mRNA, "name")
mRNA_peak_ol <-  as.data.frame(impute_feature(bed_peaks, mRNA, "name"))
View(mRNA_peak_ol)
mRNA_peak_ol <-  as.data.frame(impute_feature(mRNA, bed_peaks, "name"))
bed_peaks_table <- read.table("G4_CnT_combined_peaks_DESeq_annotated_v2.txt", header = T, sep = "\t")
View(bed_peaks_table)
bed_peaks <- rtracklayer::import(bed_peaks_table[c(1,2,3)])
bed_peaks <- makeGRangesFromDataFrame(bed_peaks_table)
mRNA <- rtracklayer::import("../genelists/mRNA_categories.tss.bed")
lncRNA <- rtracklayer::import("../genelists/lncRNA_categories.tss.bed")
mRNA_peak_ol <-  as.data.frame(impute_feature(mRNA, bed_peaks, "name"))
as.data.frame(bed_peaks_table)
as.data.frame(mRNA)
mRNA_peak_ol <-  as.data.frame(impute_feature(mRNA, bed_peaks, "DKO"))
impute_feature(mRNA, bed_peaks, "DKO")
bed_peaks_table
bed_peaks_bedcol <- bed_peaks_table[c(1,2,3,6),]
bed_peaks_bedcol <- bed_peaks_table[c(1,2,3,6),]
bed_peaks_bedcol <- bed_peaks_table[,c(1,2,3,6)]
bed_peaks_bedcol <- bed_peaks_table[,c(1,2,3,6,8,5)]
bed_peaks_bedcol <- bed_peaks_table[,c(1,2,3,12,8,5)]
colnames(bed_peaks_bedcol)[4] <- "name"
bed_peaks_bedcol$name<-as.character(bed_peaks_bedcol$name)
bed_peaks <- makeGRangesFromDataFrame(bed_peaks_bedcol)
mRNA <- rtracklayer::import("../genelists/mRNA_categories.tss.bed")
lncRNA <- rtracklayer::import("../genelists/lncRNA_categories.tss.bed")
impute_feature(mRNA, bed_peaks, "DKO")
impute_feature(mRNA, bed_peaks, "name")
mRNA
bed_peaks
bed_peaks <- makeGRangesFromDataFrame(bed_peaks_bedcol,seqnames.field = "name")
bed_peaks
bed_peaks <- makeGRangesFromDataFrame(bed_peaks_bedcol,keep.extra.columns = TRUE)
bed_peaks
impute_feature(mRNA, bed_peaks, "name")
mRNA_peak_ol <-  as.data.frame(impute_feature(mRNA, bed_peaks, "name"))
View(mRNA_peak_ol)
table(mRNA_peak_ol)
View(mRNA_peak_ol)
mRNA_peak_ol$feature[is.na(mRNA_peak_ol$feature)] <- "nopeak"
table(mRNA_peak_ol[,c(6,8)]
q
table(mRNA_peak_ol[,c(6,8)])
bed_peaks_table <- read.table("G4_CnT_combined_peaks_DESeq_annotated_v2.txt", header = T, sep = "\t")
bed_peaks_table <- read.table("G4_CnT_combined_peaks_DESeq_annotated_v2.txt", header = T, sep = "\t")
bed_peaks_table$class <- "undef"
bed_peaks_table$class[bed_peaks_table$DKO] <- "DJ"
bed_peaks_table$class[bed_peaks_table$DKO] <- "DJ"
bed_peaks_table$class[!bed_peaks_table$DKO & !bed_peaks_table$DHX36 & !bed_peaks_table$FANCJ] <- "nonDJ"
View(bed_peaks_table)
bed_peaks_bedcol <- bed_peaks_table[,c(1,2,3,16,8,5)]
colnames(bed_peaks_bedcol)[4] <- "name"
bed_peaks_bedcol$name<-as.character(bed_peaks_bedcol$name)
bed_peaks <- makeGRangesFromDataFrame(bed_peaks_bedcol,keep.extra.columns = TRUE)
mRNA <- rtracklayer::import("../genelists/mRNA_categories.tss.bed")
lncRNA <- rtracklayer::import("../genelists/lncRNA_categories.tss.bed")
mRNA_peak_ol <-  as.data.frame(impute_feature(mRNA, bed_peaks, "name"))
mRNA_peak_ol$feature[is.na(mRNA_peak_ol$feature)] <- "nopeak"
table(mRNA_peak_ol[,c(6,8)])
lncRNA_peak_ol <-  as.data.frame(impute_feature(lncRNA, bed_peaks, "name"))
lncRNA_peak_ol$feature[is.na(lncRNA_peak_ol$feature)] <- "nopeak"
table(mRNA_peak_ol[,c(6,8)])
table(lncRNA_peak_ol[,c(6,8)])
View(lncRNA_peak_ol)
coord <- read.table("ensemble_genes_mm39.txt",header = T,sep = "\t")
coord<-coord[!is.na(coord$Ensembl.Canonical),]
gl.DKOspec <- read.table("1.list_genes_names_lncRNA_RNAseq_DKOspec.txt")[,1]
gl.common <- read.table("2.list_genes_names_lncRNA_RNAseq_NonChangedDKOvsWT.txt")[,1]
gl.DKOup <- read.table("3.list_genes_names_lncRNA_RNAseq_UpregulatedDKOvsWT.txt")[,1]
gl.WTspec <- read.table("4.list_genes_names_lncRNA_RNAseq_WTspec.txt")[,1]
match<-coord[coord$Gene.name %in% gl.DKOspec,]
bed.DKOspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.DKOspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.DKOspec, file="lncRNA_DKOspec.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.DKOspec, file="lncRNA_DKOspec.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.name %in% gl.common,]
bed.common <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.common <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.common, file="lncRNA_common.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.common, file="lncRNA_common.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.name %in% c(gl.DKOup,gl.DKOspec),]
bed.DKOup <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.DKOup <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.DKOup, file="lncRNA_DKOup.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.DKOup, file="lncRNA_DKOup.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
match<-coord[coord$Gene.name %in% gl.WTspec,]
bed.WTspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcript.start..bp.,
end=match$Transcript.end..bp.,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
tss.WTspec <- data.frame( chr=paste0("chr",match$Chromosome.scaffold.name),
start=match$Transcription.start.site..TSS.-1000,
end=match$Transcription.start.site..TSS.+1000,
name=match$Gene.name,
score=0,
strand=gsub("1","+",gsub("-1","-",match$Strand)))
write.table(bed.WTspec, file="lncRNA_WTspec.bed",col.names = F,row.names = F, quote = F, sep = "\t")
write.table(tss.WTspec, file="lncRNA_WTspec.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
tss.DKOup$name <- "lncRNA_DKOup"
tss.common$name <- "lncRNA_ns"
tss.WTspec$name <- "lncRNA_WTup"
tss.all <- rbind(tss.DKOspec,tss.common,tss.WTspec)
write.table(tss.all, file="lncRNA_categories.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
View(tss.all)
tss.DKOup$name <- "lncRNA_DKOup"
tss.common$name <- "lncRNA_ns"
tss.WTspec$name <- "lncRNA_WTup"
tss.all <- rbind(tss.DKOup,tss.common,tss.WTspec)
write.table(tss.all, file="lncRNA_categories.tss.bed",col.names = F,row.names = F, quote = F, sep = "\t")
View(tss.all)
bw_dir <- "/Volumes/DATA/DATA/Puck/bigwig/"
chromhmm <- "../genome/ESC_10_segments.mm39.bed"
library("wigglescout")
library("ggpubr")
library("ggplot2")
library("DESeq2")
library("dplyr")
library("ggrastr")
clean <- function (fn) {
fn <- gsub(pattern = ".+/", "", x = fn)
fn <- gsub(pattern = ".mm9.+", "", x = fn)
fn <- gsub(pattern = ".mm39.+", "", x = fn)
fn <- gsub(pattern = "_S.+", "", x = fn)
fn <- gsub(pattern = ".scaled.bw", "", x = fn)
fn <- gsub(pattern = ".unscaled.bw", "", x = fn)
fn <- gsub(pattern = "_batch2", "", x = fn)
fn <- gsub(pattern = "-", " ", x = fn)
fn <- gsub(pattern = "_", " ", x = fn)
fn <- gsub(pattern = " HA ", " ", x = fn)
fn <- gsub(pattern = "D1D6", "FANCJ-/-", x = fn)
fn <- gsub(pattern = "P2D2", "DHX36-/-", x = fn)
fn <- gsub(pattern = "P3D4", "FANCJ-/-DHX36-/-", x = fn)
return(fn)
}
BWs <- paste0(bw_dir,list.files(bw_dir,pattern="G4_.+_combined.bw"))
Rloop <- paste0(bw_dir,list.files(bw_dir,pattern="Rloop_.+_combined.bw"))
mypal <-c("cornflowerblue","orange","red2","#505050")
mypal3 <-c("cornflowerblue","cornflowerblue","cornflowerblue","orange","orange","orange","red2","red","red2","black","black","black")
mypal2 <-c("cornflowerblue","cornflowerblue","orange","orange","red2","red","black","black")
library(bedscout)
bed_peaks_table <- read.table("G4_CnT_combined_peaks_DESeq_annotated_v2.txt", header = T, sep = "\t")
bed_peaks_table$class <- "undef"
bed_peaks_table$class[bed_peaks_table$DKO] <- "DJ"
bed_peaks_table$class[!bed_peaks_table$DKO & !bed_peaks_table$DHX36 & !bed_peaks_table$FANCJ] <- "nonDJ"
bed_peaks_bedcol <- bed_peaks_table[,c(1,2,3,16,8,5)]
colnames(bed_peaks_bedcol)[4] <- "name"
bed_peaks_bedcol$name<-as.character(bed_peaks_bedcol$name)
bed_peaks <- makeGRangesFromDataFrame(bed_peaks_bedcol,keep.extra.columns = TRUE)
mRNA <- rtracklayer::import("../genelists/mRNA_categories.tss.bed")
lncRNA <- rtracklayer::import("../genelists/lncRNA_categories.tss.bed")
mRNA_peak_ol <-  as.data.frame(impute_feature(mRNA, bed_peaks, "name"))
mRNA_peak_ol$feature[is.na(mRNA_peak_ol$feature)] <- "nopeak"
table(mRNA_peak_ol[,c(6,8)])
lncRNA_peak_ol <-  as.data.frame(impute_feature(lncRNA, bed_peaks, "name"))
lncRNA_peak_ol$feature[is.na(lncRNA_peak_ol$feature)] <- "nopeak"
table(lncRNA_peak_ol[,c(6,8)])
peak_mRNA_ol <-  as.data.frame(impute_feature(bed_peaks, mRNA "name"))
peak_mRNA_ol <-  as.data.frame(impute_feature(bed_peaks, mRNA, "name"))
table(mRNA_peak_ol[,c(6,8)])
table(peak_mRNA_ol[,c(6,8)])
peak_mRNA_ol <-  as.data.frame(impute_feature(bed_peaks, lncRNA, "name"))
table(peak_mRNA_ol[,c(6,8)])
peak_mRNA_ol$feature[is.na(peak_mRNA_ol$feature)] <- "none"
table(peak_mRNA_ol[,c(6,8)])
peak_mRNA_ol <-  as.data.frame(impute_feature(bed_peaks, mRNA, "name"))
peak_mRNA_ol <-  as.data.frame(impute_feature(bed_peaks, mRNA, "name"))
peak_mRNA_ol$feature[is.na(peak_mRNA_ol$feature)] <- "none"
peak_mRNA_ol$feature[is.na(peak_mRNA_ol$feature)] <- "none"
table(peak_mRNA_ol[,c(6,8)])
peak_mRNA_ol <-  as.data.frame(impute_feature(bed_peaks, lncRNA, "name"))
peak_mRNA_ol$feature[is.na(peak_mRNA_ol$feature)] <- "none"
table(peak_mRNA_ol[,c(6,8)])
library(wigglescout)
plot_vio_RNAseq_DKO_spec <- bw_loci(bwfiles = BWs,loci = "../genelists/mRNA_categories.tss.bed")
mRNA_tss_G4 <- bw_loci(bwfiles = BWs,loci = "../genelists/mRNA_categories.tss.bed")
bw_dir <- "/Volumes/DATA/DATA/Puck/bigwig/"
chromhmm <- "../genome/ESC_10_segments.mm39.bed"
library("wigglescout")
library("ggpubr")
library("ggplot2")
library("DESeq2")
library("dplyr")
library("ggrastr")
clean <- function (fn) {
fn <- gsub(pattern = ".+/", "", x = fn)
fn <- gsub(pattern = ".mm9.+", "", x = fn)
fn <- gsub(pattern = ".mm39.+", "", x = fn)
fn <- gsub(pattern = "_S.+", "", x = fn)
fn <- gsub(pattern = ".scaled.bw", "", x = fn)
fn <- gsub(pattern = ".unscaled.bw", "", x = fn)
fn <- gsub(pattern = "_batch2", "", x = fn)
fn <- gsub(pattern = "-", " ", x = fn)
fn <- gsub(pattern = "_", " ", x = fn)
fn <- gsub(pattern = " HA ", " ", x = fn)
fn <- gsub(pattern = "D1D6", "FANCJ-/-", x = fn)
fn <- gsub(pattern = "P2D2", "DHX36-/-", x = fn)
fn <- gsub(pattern = "P3D4", "FANCJ-/-DHX36-/-", x = fn)
return(fn)
}
BWs <- paste0(bw_dir,list.files(bw_dir,pattern="G4_.+_combined.bw"))
Rloop <- paste0(bw_dir,list.files(bw_dir,pattern="Rloop_.+_combined.bw"))
mypal <-c("cornflowerblue","orange","red2","#505050")
mypal3 <-c("cornflowerblue","cornflowerblue","cornflowerblue","orange","orange","orange","red2","red","red2","black","black","black")
mypal2 <-c("cornflowerblue","cornflowerblue","orange","orange","red2","red","black","black")
library(wigglescout)
mRNA_tss_G4 <- bw_loci(bwfiles = BWs,loci = "../genelists/mRNA_categories.tss.bed")
mRNA_tss_G4 <- as.data.frame(bw_loci(bwfiles = BWs,loci = "../genelists/mRNA_categories.tss.bed"))
View(mRNA_tss_G4)
clean(colnames(mRNA_tss_G4))
library(reshape2)
mdf <- melt(data.frame(name=rownames(cov),cov[,6:10]))
mdf <- melt(data.frame(name=rownames(mRNA_tss_G4),mRNA_tss_G4[,6:10]))
View(mdf)
plot_viol_rep_all_peaks <- ggviolin(mdf, x="variable",y="value",fill="name.1",palette = mypal, add="mean_sd")
ggviolin(mdf, x="variable",y="value",fill="name.1",palette = mypal, add="mean_sd")
ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
ggboxplot(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
library(wigglescout)
library(reshape2)
mRNA_tss_G4 <- as.data.frame(bw_loci(bwfiles = BWs,loci = "../genelists/lncRNA_categories.tss.bed"))
mdf <- melt(data.frame(name=rownames(mRNA_tss_G4),mRNA_tss_G4[,6:10]))
ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
ggboxplot(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
ggboxplot(mdf, x="name.1",y="value",fill="variable",palette = mypal)
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
ggboxplot(mdf, x="name.1",y="value",fill="variable",palette = mypal) + stat_compare_means(method = "t.test")
compare_means(value ~ variable, data = mdf)
compare_means(value ~ variable . name.1, data = mdf)
compare_means(value ~ variable + name.1, data = mdf)
compare_means(value ~ variable,name.1, data = mdf)
compare_means(value ~ variable * name.1, data = mdf)
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
ggboxplot(mdf, x="name.1",y="value",fill="variable",palette = mypal)
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
ggboxplot(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + compare_means(method = "t.test")
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
ggboxplot(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + stat_compare_means(method = "t.test")
colnames(mRNA_tss_G4)
colnames(mRNA_tss_G4)[6:9] <- c("FANCJ","DHX36","DKO","WT")
mdf <- melt(data.frame(name=rownames(mRNA_tss_G4),mRNA_tss_G4[,6:10]))
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
my_comparisons <- list( c("FANCJ", "WT"), c("DHX36", "WT"), c("DKO", "WT") )
ggboxplot(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + stat_compare_means(method = "t.test", comparison=my_comparisons)
#ggboxplot(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + stat_compare_means(method = "t.test", comparison=my_comparisons)
ggviolin(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + stat_compare_means(method = "t.test", comparison=my_comparisons)
#ggboxplot(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + stat_compare_means(method = "t.test", comparison=my_comparisons)
ggviolin(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1", add = "mean_sd") + stat_compare_means(method = "t.test", comparison=my_comparisons)
mRNA_tss_G4 <- as.data.frame(bw_loci(bwfiles = BWs,loci = "../genelists/mRNA_categories.tss.bed"))
colnames(mRNA_tss_G4)[6:9] <- c("FANCJ","DHX36","DKO","WT")
mdf <- melt(data.frame(name=rownames(mRNA_tss_G4),mRNA_tss_G4[,6:10]))
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
my_comparisons <- list( c("FANCJ", "WT"), c("DHX36", "WT"), c("DKO", "WT") )
#ggboxplot(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + stat_compare_means(method = "t.test", comparison=my_comparisons)
ggviolin(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1", add = "mean_sd") + stat_compare_means(method = "t.test", comparison=my_comparisons)
library(wigglescout)
library(reshape2)
mRNA_tss_G4 <- as.data.frame(bw_loci(bwfiles = BWs,loci = "../genelists/lncRNA_categories.tss.bed"))
colnames(mRNA_tss_G4)[6:9] <- c("FANCJ","DHX36","DKO","WT")
mdf <- melt(data.frame(name=rownames(mRNA_tss_G4),mRNA_tss_G4[,6:10]))
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
my_comparisons <- list( c("FANCJ", "WT"), c("DHX36", "WT"), c("DKO", "WT") )
#ggboxplot(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + stat_compare_means(method = "t.test", comparison=my_comparisons)
ggviolin(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1", add = "mean_sd") + stat_compare_means(method = "t.test", comparison=my_comparisons)
mRNA_tss_G4 <- as.data.frame(bw_loci(bwfiles = BWs,loci = "../genelists/mRNA_categories.tss.bed"))
colnames(mRNA_tss_G4)[6:9] <- c("FANCJ","DHX36","DKO","WT")
mdf <- melt(data.frame(name=rownames(mRNA_tss_G4),mRNA_tss_G4[,6:10]))
#ggviolin(mdf, x="name.1",y="value",fill="variable",palette = mypal, add="mean_sd")
my_comparisons <- list( c("FANCJ", "WT"), c("DHX36", "WT"), c("DKO", "WT") )
#ggboxplot(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1") + stat_compare_means(method = "t.test", comparison=my_comparisons)
ggviolin(mdf, x="variable",y="value",fill="variable",palette = mypal, facet.by = "name.1", add = "mean_sd") + stat_compare_means(method = "t.test", comparison=my_comparisons)
#read in - if you want to skip de novo generation
bed_peaks_table <- read.table("G4_CnT_combined_peaks_DESeq_annotated_v2.txt", header = T, sep = "\t")
vpal=colorRampPalette(c("cornflowerblue","orange","red2"))
stats <- as.data.frame(table(bed_peaks_table$feature))
ggdonutchart(stats,x = "Freq",label="Var1",fill=vpal(10))
#read in - if you want to skip de novo generation
bed_peaks_table <- read.table("G4_CnT_combined_peaks_DESeq_annotated_v2.txt", header = T, sep = "\t")
vpal=colorRampPalette(c("cornflowerblue","orange","red2"))
stats <- as.data.frame(table(bed_peaks_table$feature))
ggdonutchart(stats,x = "Freq",label="Var1",fill=vpal(10))
bed_peaks_table$feature[bed_peaks_table$DKO]
head(bed_peaks_table[bed_peaks_table$DKO,])
head(bed_peaks_table[bed_peaks_table$DKO,c(1,2,3,6,15,5)])
library(ggpubr)
bed_DJ <- bed_peaks_table[bed_peaks_table$DKO,c(1,2,3,6,15,5)]
stats <- as.data.frame(table(bed_peaks_table$feature[bed_peaks_table$DKO]))
plot_donut_DJ <- ggdonutchart(stats,x = "Freq",label="Var1",fill=vpal(10))
plot_donut_DJ
#read in - if you want to skip de novo generation
bed_peaks_table <- read.table("G4_CnT_combined_peaks_DESeq_annotated_v2.txt", header = T, sep = "\t")
vpal=colorRampPalette(c("cornflowerblue","orange","red2"))
stats <- as.data.frame(table(bed_peaks_table$feature))
ggdonutchart(stats,x = "Freq",label="Var1",fill=vpal(10))
bed_nonDJ <- bed_peaks_table[bed_peaks_table$DKO,c(1,2,3,6,15,5)]
bed_nonDJ <- bed_peaks_table[!bed_peaks_table$DKO & !bed_peaks_table$DHX36 & !bed_peaks_table$FANCJ,c(1,2,3,6,15,5)]
bed_nonDJ$name <- "nonDJ"
write.table(bed_peaks_table,"../peaks/G4_CnT_combined_peaks_nonDJ.bed", row.names = F, col.names = F,quote = F, sep = "\t")
bed_nonDJ <- bed_peaks_table[!bed_peaks_table$DKO & !bed_peaks_table$DHX36 & !bed_peaks_table$FANCJ,c(1,2,3,6,15,5)]
bed_nonDJ$name <- "nonDJ"
write.table(bed_nonDJ,"../peaks/G4_CnT_combined_peaks_nonDJ.bed", row.names = F, col.names = F,quote = F, sep = "\t")
bed_nonDJ <- bed_peaks_table[!bed_peaks_table$DKO & !bed_peaks_table$DHX36 & !bed_peaks_table$FANCJ],c(1,2,3,6,15,5)
bed_nonDJ <- bed_peaks_table[!bed_peaks_table$DKO & !bed_peaks_table$DHX36 & !bed_peaks_table$FANCJ,c(1,2,3,6,15,5)]
bed_nonDJ$name <- "nonDJ"
write.table(bed_nonDJ,"../peaks/G4_CnT_combined_peaks_nonDJ.bed", row.names = F, col.names = F,quote = F, sep = "\t")
stats <- as.data.frame(table(bed_peaks_table$feature[!bed_peaks_table$DKO & !bed_peaks_table$DHX36 & !bed_peaks_table$FANCJ]))
plot_donut_nonDJ <- ggdonutchart(stats,x = "Freq",label="Var1",fill=vpal(10))
plot_donut_nonDJ
bed_DJ <- bed_peaks_table[bed_peaks_table$DKO,c(1,2,3,6,15,5)]
bed_DJ$name <- "DJ"
bed_DJ <- bed_peaks_table[bed_peaks_table$DKO,c(1,2,3,6,15,5)]
bed_DJ$name <- "DJ"
write.table(bed_DJ,"../peaks/G4_CnT_combined_peaks_DJ.bed", row.names = F, col.names = F,quote = F, sep = "\t")
stats <- as.data.frame(table(bed_peaks_table$feature[bed_peaks_table$DKO]))
plot_donut_DJ <- ggdonutchart(stats,x = "Freq",label="Var1",fill=vpal(10))
plot_donut_DJ
